<html>
<head>
    <style>
        table{
            border: 1px solid black;
            background-color: white;
        }
        th{
             border: 1px solid black;
             border-collapse: collapse;
             padding: 5px;
             color: white;

        }
        td{
                border: 1px solid black;
                border-collapse: collapse;
                padding: 5px;
                color: black;
        }
        table tr:nth-child(odd) {
                background-color: grey;
        }
        table tr:nth-child(even) {
                background-color: white;
        }
    </style> 
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAgv3ZYGpZTEpvnlzk1jQUGJdGKZnH8MbY"> </script>
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script type='text/javascript'>
        
        // Reference: http://www.w3schools.com/json/json_http.asp
        
        var xmlhttp = new XMLHttpRequest();
        var url = "https://cse5335-tsa6185.herokuapp.com/welcome/datasend";
        var myArr;

        // Load the Visualization API and the piechart package.
        google.charts.load('current', {'packages':['corechart']});

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it.
        function drawChart() {

        // Create our data table.
        data = new google.visualization.DataTable();
        data.addColumn('string', 'Gender');
        
        data.addRows([
          ['Male'],
          ['Male'],
          ['Male'],
          ['Male'],
          ['Male'],
          ['Male'],
          ['Male'],
          ['Female'],
          ['Female'],
          ['Female'],
        ]);

        // Set chart options
        var options = {'title':'Gender distribution chart','width':400,'height':300};

        // Instantiate and draw our chart, passing in some options.
        chart = new google.visualization.PieChart(document.getElementById('chart_div'));
        chart.draw(data, options);

        }





        $(document).ready(function(){
            $('#button1').click(function(){
                function returnTable(arr){
                    var out = "<table><tr><th>NAME</th><th>GENDER</th><th>ADDRESS</th><th>AGE</th></tr>";
                    var i;

                    for(i=0; i<arr.length ; i++){
                        out += "<tr><td>" + arr[i].aname +
                               "</td><td>" + arr[i].gender +
                               "</td><td>" + arr[i].address +
                               "</td><td>" + arr[i].age +
                               "</td></tr>";
                    }
                    out += "</table>"        
                    $("#button1").html(out)
                    for (var i = 0; i < arr.length ; i++) {
                        codeAddress(myArr[i].address);
                    };

                    }
                if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                    myArr = JSON.parse(xmlhttp.responseText);
                    returnTable(myArr);
                }
            });
        });
        xmlhttp.open("GET", url, true);
        xmlhttp.send();

        var geocoder;
        var map;
        function initialize() {
            geocoder = new google.maps.Geocoder();
            var latlng = new google.maps.LatLng(32.7357, -97.1081);
            var mapOptions = {
                                zoom: 8,
                                center: latlng
                            }
            map = new google.maps.Map(document.getElementById("map"), mapOptions);
        }

        function codeAddress(address) {
            var address = address.toString();
            geocoder.geocode( { 'address': address}, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });
                } 
                else {
                    alert("Geocode was not successful for the following reason: " + status);
                }
            });
        }


    </script>
</head>



    <body onload="initialize()" background="https://visualizingarchitecture.com/wp-content/uploads/2014/09/villa_Ortho_poster_300.jpg">
    <font color="white">
        <p> <h1> <center> List of my top 10 actors </center> </h1> </p>
    <font color="black">
        <center> <button id="button1">Click here to know</button> </center>
    <p> </p>
    <div id="map" style="width: 800px; height: 480px; margin: 0 auto;"></div>
    <div>
    <input id="address" type="textbox" value="Arlington, TX">
    <input type="button" value="Encode" onclick="codeAddress()" style="margin: 0 auto;">
    </div>

  <!-- <div id="map-canvas" style="float:left; width: 720px; height: 480px;"> </div> -->
    <p>
  <!--   <div id="chart_div" bgcolor="#E6E6FA" style="float:right; height: 480px;"></div> -->
    <div id="chart_div" style="width:400; height:300"></div>
    <div id="chart1_div" bgcolor="#E6E6FA" style="float:left; height: 480px;"></div>
    </p>
    </body>
</html>